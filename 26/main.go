package main

import (
	"fmt"
	"strings"

)

func isUnique(s string) bool {
	// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É.
	lowerStr := strings.ToLower(s)
	// –ö–∞—Ä—Ç–∞ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ.
	rMap := map[rune]int{}
	// –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–µ, –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞ –≤ –∫–∞—Ä—Ç–µ
	// –∏ –∏–Ω–∫–µ—Ä–º–µ–Ω—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª—é—á–∞.
	for _, r := range lowerStr {
		rMap[r]++
	}
	// –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–∞—Ä—Ç–µ, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –±–æ–ª—å—à–µ 1, –∑–Ω–∞—á–∏—Ç —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å
	// –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è —Å–∏–º–≤–æ–ª, –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false.
	for _, v := range rMap {
		if v > 1 {
			return false
		}
	}
	// –ï—Å–ª–∏ –≤ –∫–∞—Ä—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–ª—é—á–µ–π –º–µ–Ω—å—à–µ 2, —Ç–æ –≤ —Å—Ç—Ä–æ–∫–µ –≤—Å–µ
	// —Å–∏–º–≤–æ–ª—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true.
	return true
}

func main() {
	s1 := "Hi manüòé"
	s2 := "üåöHello world"
	s3 := "abcd"
	s4 := "abCdefAaf"
	s5 := "aabcd"

	fmt.Println(isUnique(s1))
	fmt.Println(isUnique(s2))
	fmt.Println(isUnique(s3))
	fmt.Println(isUnique(s4))
	fmt.Println(isUnique(s5))
}